#include "Board.h"
#include "Writer.h"
#include "Application.h"

/*TODO
1. Add checking app state,checking algorithm state, alogrithm flow
2. Add Output
3. Simplify code as much as possible
4. Start making GUI
*/


int main()
{
	/*
	std::vector<unsigned int> input{ 
		3, 3, 3, 3, 4, 4, 4, 4,
		3, 2, 3, 3, 4, 4, 2, 4,
		3, 3, 3, 3, 4, 4, 4, 4,
		3, 3, 3, 3, 4, 4, 4, 4,
		5, 5, 5, 5, 6, 6, 6, 6,
		5, 5, 5, 5, 6, 6, 6, 6,
		5, 2, 5, 5, 6, 6, 2, 6,
		5, 5, 5, 5, 6, 6, 6, 6
	};
	*/
	//auto input=ReadInputFromFile("hello.txt");
	/*std::vector<unsigned int> input{
		3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5,
		3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5,
		3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5,
		3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
		3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
		3, 3, 2, 3, 3, 3, 3, 4, 4, 4, 4, 2, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5,
		3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
		3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
		3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
		3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
		3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
		3, 3, 3, 3, 6, 6, 6, 6, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 2, 5, 5, 5, 5,
		6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
		6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 8, 8, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7,
		6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 8, 8, 8, 8, 5, 5, 5, 5, 5, 5, 5, 5, 7, 7, 7,
		6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 8, 8, 8, 8, 8, 5, 5, 5, 5, 5, 7, 7, 7, 7, 7,
		6, 6, 6, 6, 6, 6, 6, 6, 6, 8, 8, 8, 8, 8, 8, 8, 5, 5, 7, 7, 7, 7, 7, 7, 7,
		6, 6, 6, 6, 2, 6, 6, 6, 6, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 2, 7,
		6, 6, 6, 6, 6, 6, 6, 6, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 7,
		9, 6, 6, 6, 6, 6, 6, 6, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7,
		9, 9, 9, 6, 6, 6, 6, 8, 8, 8, 8, 2, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7,
		9, 9, 9, 9, 9, 6, 6, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7,
		9, 9, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7,
		9, 2, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7,
		9, 9, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7
	};
	*/
	/*
	std::vector<unsigned int> input{
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 2, 1, 1, 1, 1, 2, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 2, 1, 1, 1, 1, 2, 0,
		0, 0, 0, 0, 0, 0, 0, 0
	};
	*/
	/*
	std::cout << ParseToMatrix(input) << std::endl;
	auto algorithms = std::make_shared<AlgorithmsKeeper>();
	auto board = std::make_unique<BoardImplementation>(algorithms, input);
	
	board->SetAlgorithm(AlgoType::VoronoiDiagram);

	board->PerformAlgorithm();
	auto mat = board->GetCurrentState();
	
	std::cout << ParseToMatrix(mat) << std::endl;
	*/
	Application app;
	app.Run();
	//SaveOutputToFile("triangulation.txt", input);
	return 0;
}